<?xml version="1.0"?>
<!--
     Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<document>

  <properties>
    <author email="">Conor MacNeill</author>
    <author email="stefan.bodewig@freenet.de">Stefan Bodewig</author>
    <title>Welcome</title>
  </properties>

<body>
   <section name="Ant 1.7.0">
    <h3>December 19, 2006 - Ant 1.7.0 Available</h3>
    <p>Apache Ant 1.7.0 is now available for <a
    href="http://ant.apache.org/bindownload.cgi">download</a>.</p>

    <p>Ant 1.7 introduces a resource framework. Some of the core ant 
    tasks such as &lt;copy/&gt; are now able to process not only file 
    system resources but also zip entries, tar entries, paths, ... 
    Resource collections group resources, and can be further 
    combined with operators such as union and intersection. This 
    can be extended by custom resources and custom tasks using resources.</p>

    <p>
    Ant 1.7 starts outsourcing of optional tasks to Antlibs. 
    The .NET antlib in preparation will replace the .NET optional tasks which ship in Ant.
    Support for the version control system Subversion will be only provided as an antlib to
    be released shortly. 
    </p>

    <p>Ant 1.7 fixes also a large number of bugs.</p>

    <p>Ant 1.7 has some initial support for Java6 features.</p>
  </section>

  <section name="AntUnit 1.0">
    <h3>January 8, 2007 - Apache AntUnit 1.0 Available</h3>
    <p>Apache AntUnit 1.0 is now available for <a
    href="http://ant.apache.org/antlibs/bindownload.cgi">download</a>.</p>

    <p>This Ant Library contains tasks to test Ant tasks using Ant
    instead of JUnit.  For more information see the <a
    href="antlibs/antunit/">AntUnit home page</a>.</p>
  </section>

  <section name=".NET Ant Library 1.0">
    <h3>November 6, 2006 - Apache .NET Ant Library 1.0 Available</h3>
    <p>Apache .NET Ant Library 1.0 is now available for <a
    href="http://ant.apache.org/antlibs/bindownload.cgi">download</a>.</p>

    <p>This Ant Library contains support for tools like NUnit as well
    as the "old .NET tasks of Ant's core.  It has been tested
    Microsoft's frameworks as well as Mono.</p>

    <p>For more information see the <a href="antlibs/dotnet/">Antlib's
    home page</a></p>
  </section>

  <section name="Apache Ant">

<p>
Apache Ant is a Java-based build tool. In theory, it is kind of like
Make, but without Make's wrinkles.
</p>

<p>
Why another build tool when there is already <em>make</em>, <em>gnumake</em>,
<em>nmake</em>, <em>jam</em>, and
others? Because all those tools have limitations that Ant's original author
couldn't live with when developing software across multiple platforms. Make-like
tools are inherently shell-based -- they evaluate a set of dependencies, then
execute commands not unlike what you would issue in a shell. This means that you
can easily extend these tools by using or writing any program for the OS that
you are working on. However, this also means that you limit yourself to the OS,
or at least the OS type such as Unix, that you are working on.
</p>

<p>
Makefiles are inherently evil as well. Anybody who has worked on them for any
time has run into the dreaded tab problem. &quot;Is my command not executing
because I have a space in front of my tab!!!&quot; said the original author of
Ant way too many times. Tools like Jam took care of this to a great degree, but
still have yet another format to use and remember.
</p>

<p>
Ant is different. Instead of a model where it is extended with shell-based
commands, Ant is extended using Java classes. Instead of writing shell commands,
the configuration files are XML-based, calling out a target tree where various
tasks get executed. Each task is run by an object that implements a particular
Task interface.
</p>

<p>
Granted, this removes some of the expressive power that is inherent by being
able to construct a shell command such as
<code>`find . -name foo -exec rm {}`</code>, but it
gives you the ability to be cross platform -- to work anywhere and everywhere.
And hey, if you really need to execute a shell command, Ant has an
<code>&lt;exec&gt;</code> task that
allows different commands to be executed based on the OS that it is executing
on.
</p>

  </section>

  <section name="Documentation">

<p>
You can view the documentation for the current release (Apache Ant 1.7.0)
<a href="manual/index.html">online</a>
</p>

<p>
Comprehensive documentation is included in the source and binary distributions.
</p>

  </section>

  <!--section name="Nightly Builds">
    <p>
    If you wish to use the latest Ant features, you can try downloading a nightly
    build from <a href="http://brutus.apache.org/~nightlybuild/builds/ant/">here</a>
    </p>

  </section-->

  <section name="Get Involved">
<ul>
<li><a href="http://jakarta.apache.org/getinvolved/getinvolvedindex.html">Get Involved</a></li>
<li><a href="mail.html">Join Mailing Lists</a></li>
<li><a href="http://marc.theaimsgroup.com/?l=ant-dev&amp;r=1&amp;w=2">Search the Dev Mailing List</a>
</li>
<li><a href="http://marc.theaimsgroup.com/?l=ant-user&amp;r=1&amp;w=2">Search the User Mailing List</a>
</li>
</ul>



  </section>

</body>
</document>

