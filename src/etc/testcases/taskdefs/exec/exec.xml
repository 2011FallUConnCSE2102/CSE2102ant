<project name="exec-test" default="spawn" basedir=".">
    <target name="init">
        <!-- this property can be overriden programatically in the Java test case -->
        <property name="timeToWait" value="10"/>
        <!-- this property can be overriden programatically in the Java test case -->
        <property name="logFile" value="${java.io.tmpdir}/spawn.log"/>
        <property environment="env"/>
        <!-- UNIX -->
        <available file="sh" filepath="${env.PATH}" property="sh.executable"/>
        <!-- CYGWIN -->
        <available file="sh.exe" filepath="${env.PATH}" property="sh.exe.executable"/>
        <condition property="test.can.run">
            <or>
                <isset property="sh.executable"/>
                <isset property="sh.exe.executable"/>
            </or>
        </condition>
        <!-- UNIX -->
        <available file="wc" filepath="${env.PATH}" property="wc.executable"/>
        <!-- CYGWIN -->
        <available file="wc.exe" filepath="${env.PATH}" property="wc.exe.executable"/>
        <condition property="wc.can.run">
            <or>
                <isset property="wc.executable"/>
                <isset property="wc.exe.executable"/>
            </or>
        </condition>
    </target>

    <target name="spawn" depends="init" if="test.can.run">
        <exec executable="sh" spawn="true">
            <arg value="spawn.sh"/>
            <arg value="${timeToWait}" />
            <arg value="${logFile}" />
        </exec>
    </target>

    <target name="no-redirect" depends="init" if="test.can.run">
        <exec executable="sh">
            <arg value="parrot.sh"/>
            <arg value="${ant.file}" />
        </exec>
    </target>

    <target name="redirect1" depends="init" if="test.can.run">
        <exec executable="sh" output="redirect.out">
            <arg value="parrot.sh"/>
            <arg value="${ant.file}" />
        </exec>
    </target>

    <target name="redirect2" depends="init" if="test.can.run">
        <exec executable="sh" output="redirect.out" error="redirect.err">
            <arg value="parrot.sh"/>
            <arg value="${ant.file}" />
        </exec>
    </target>

    <target name="redirect3" depends="init" if="test.can.run">
        <exec executable="sh" logerror="true"
              output="redirect.out" outputproperty="redirect.out">
            <arg value="parrot.sh"/>
            <arg value="${ant.file}" />
        </exec>
    </target>

    <target name="redirect4" depends="init" if="test.can.run">
        <exec executable="sh"
              error="redirect.err" errorproperty="redirect.err"
              output="redirect.out" outputproperty="redirect.out">
            <arg value="parrot.sh"/>
            <arg value="${ant.file}" />
        </exec>
    </target>

    <target name="redirect5" depends="init" if="wc.can.run">
        <exec executable="wc" inputstring="x y z"
              error="redirect.err" errorproperty="redirect.err"
              output="redirect.out" outputproperty="redirect.out">
            <arg value="-w"/>
        </exec>
    </target>

    <target name="redirect6" depends="init" if="wc.can.run">
        <echo file="redirect.in">x y z</echo>
        <exec executable="wc" input="redirect.in"
              error="redirect.err" errorproperty="redirect.err"
              output="redirect.out" outputproperty="redirect.out">
            <arg value="-w"/>
        </exec>
    </target>

    <target name="redirect7" depends="init" if="wc.can.run">
        <exec executable="wc" inputstring="x y z"
              error="redirect.err"
              output="redirect.out" outputproperty="redirect.out">
            <arg value="-w"/>
        </exec>
    </target>

    <target name="cleanup">
        <delete>
            <fileset file="${logFile}" />
            <fileset dir="${basedir}" includes="redirect.*" />
        </delete>
    </target>
</project>
