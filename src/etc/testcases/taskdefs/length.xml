<project name="length">
  <property name="dir" location="lengthtestdir" />
  <property name="dir.a" location="${dir}/a" />
  <property name="dir.b" location="${dir}/b" />

  <target name="init">
    <mkdir dir="${dir.a}" />
    <mkdir dir="${dir.b}" />
    <property name="foo" location="${dir.a}/foo" />
    <property name="bar" location="${dir.b}/bar" />
    <echo file="${foo}" message="foo" />
    <echo file="${bar}" message="bar" />
  </target>

  <target name="testEach" depends="init">
    <length mode="each" property="length.each">
      <fileset id="fs" dir="${dir}" />
    </length>
    <length string="${length.each}" property="length.length.each" />
    <length string="${foo}${bar}........${line.separator}"
            property="length.expected" />
    <fail>
      <!-- test that both files are represented, and that the
           output is the expected length; do not assume order. -->
      <condition>
        <not>
          <and>
            <contains string="${length.each}" substring="${foo} : 3" />
            <contains string="${length.each}" substring="${bar} : 3" />
            <equals arg1="${length.length.each}" arg2="${length.expected}" />
          </and>
        </not>
      </condition>
    </fail>
  </target>

  <target name="testAll" depends="init">
    <length property="length.all">
      <fileset id="foo" file="${dir.a}/foo" />
      <fileset id="bar" file="${dir.b}/bar" />
    </length>
    <fail>
      <condition>
        <not>
          <equals arg1="6" arg2="${length.all}" />
        </not>
      </condition>
    </fail>
  </target>

  <target name="testFile" depends="init">
    <length property="length.foo" file="${dir.a}/foo" />
    <fail>
      <condition>
        <not>
          <equals arg1="3" arg2="${length.foo}" />
        </not>
      </condition>
    </fail>
  </target>

  <target name="testBoth" depends="init">
    <length property="length.foo" file="${dir.a}/foo">
      <fileset file="${dir.b}/bar" />
    </length>
    <fail>
      <condition>
        <not>
          <equals arg1="6" arg2="${length.foo}" />
        </not>
      </condition>
    </fail>
  </target>

  <target name="testDupes" depends="init">
    <length property="length.foo" file="${dir.a}/foo">
      <fileset dir="${dir}" />
    </length>
    <fail>
      <condition>
        <not>
          <equals arg1="6" arg2="${length.foo}" />
        </not>
      </condition>
    </fail>
  </target>

  <target name="testString">
    <length string="foo" property="length.string" />
    <fail>
      <condition>
        <not>
          <equals arg1="3" arg2="${length.string}" />
        </not>
      </condition>
    </fail>
  </target>

  <target name="testTrimFile" description="should fail">
    <length file="${ant.file}" trim="false" />
  </target>

  <target name="testStringFile" description="should fail">
    <length string="foo" file="${ant.file}" />
  </target>

  <target name="cleanup">
    <delete dir="${dir}" />
  </target>

</project>
